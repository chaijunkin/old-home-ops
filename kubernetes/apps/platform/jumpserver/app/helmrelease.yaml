---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jumpserver
  namespace: platform
spec:
  interval: 30m
  chart:
    spec:
      chart: jumpserver
      version: 3.9.2
      sourceRef:
        kind: HelmRepository
        name: jumpserver
        namespace: platform
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    # Default values for jumpserver.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    nameOverride: ""
    fullnameOverride: ""

    ## @param global.imageRegistry Global Docker image registry
    ## @param global.imagePullSecrets Global Docker registry secret names as an array
    ## @param global.storageClass Global StorageClass for Persistent Volume(s)
    ## @param global.redis.password Global Redis&trade; password (overrides `auth.password`)
    ##
    global:
      imageRegistry: "ghcr.io"
      imageTag: v3.3.1
      ## E.g.
      #  imagePullSecrets:
      #  - myRegistryKeySecretName
      ##
      imagePullSecrets: []
      storageClass: ""

    ## Please configure your MySQL server first
    ## Jumpserver will not start the external MySQL server.
    ##
    externalDatabase:
      engine: mysql
      host: 192.168.1.11
      port: 3306
      user: "{{ .Release.Name }}"
      password: "{{ .Release.Name }}"
      database: "{{ .Release.Name }}"

    ## Please configure your Redis server first
    ## Jumpserver will not start the external Redis server.
    ##
    externalRedis:
      host: 192.168.1.11
      port: 6379
      password:

    serviceAccount:
      # Specifies whether a service account should be created
      create: false
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name:

    ingress:
      enabled: true
      ingressClassName: internal
      annotations:
        external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      hosts:
        - host: &host "authentik.${SECRET_DOMAIN}"
          paths:
            - path: /
      tls:
        - hosts:
            - *host

    core:
      enabled: true

      labels:
        app.jumpserver.org/name: jms-core

      config:
        # Generate a new random secret key by execute `cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 50`
        secretKey: "8EWtu1fjcEVdvQ8k4l3Ea0xJZTBZ1KLnhh3mIjoO8oKNU4pW9o%"
        # Generate a new random bootstrap token by execute `cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 24`
        bootstrapToken: "sVjeUAq2TPD8RYFyaRGeLntM%"
        # Enabled it for debug
        debug: false
        log:
          level: ERROR

      replicaCount: 1

      image:
        registry: docker.io
        repository: jumpserver/core
        tag: v3.3.1
        pullPolicy: IfNotPresent

      command: []

      env:
        # See: https://docs.jumpserver.org/zh/master/admin-guide/env/#core
        SESSION_EXPIRE_AT_BROWSER_CLOSE: true
        # SESSION_COOKIE_AGE: 86400
        # SECURITY_VIEW_AUTH_NEED_MFA: true

      livenessProbe:
        failureThreshold: 30
        httpGet:
          path: /api/health/
          port: web

      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /api/health/
          port: web

      podSecurityContext: {}
        # fsGroup: 2000

      securityContext: {}
        # capabilities:
        #   drop:
        #   - ALL
        # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000

      service:
        type: ClusterIP
        web:
          port: 8080

      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 1000m
        #   memory: 2048Mi
        # requests:
        #   cpu: 500m
        #   memory: 1024Mi

      persistence:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        size: 100Gi
        annotations:
          "helm.sh/resource-policy": keep
        finalizers:
          - kubernetes.io/pvc-protection
        # subPath: ""
        # existingClaim: ""

      volumeMounts: []

      volumes: []

      nodeSelector: {}

      tolerations: []

      affinity: {}

    koko:
      enabled: true

      labels:
        app.jumpserver.org/name: jms-koko

      config:
        log:
          level: ERROR

      replicaCount: 1

      image:
        registry: docker.io
        repository: jumpserver/koko
        tag: v3.3.1
        pullPolicy: IfNotPresent

      command: []

      env: []
        # See: https://docs.jumpserver.org/zh/master/admin-guide/env/#koko
        # LANGUAGE_CODE: zh
        # REUSE_CONNECTION: true
        # ENABLE_LOCAL_PORT_FORWARD: true
        # ENABLE_VSCODE_SUPPORT: true

      livenessProbe:
        failureThreshold: 30
        httpGet:
          path: /koko/health/
          port: web

      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /koko/health/
          port: web

      podSecurityContext: {}
        # fsGroup: 2000

      securityContext:
        privileged: true
        # capabilities:
        #   drop:
        #   - ALL
        # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000

      service:
        type: ClusterIP
        web:
          port: 5000
        ssh:
          port: 2222

      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
        # requests:
        #   cpu: 100m
        #   memory: 128Mi

      persistence:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        size: 10Gi
        annotations:
          "helm.sh/resource-policy": keep
        finalizers:
          - kubernetes.io/pvc-protection
        # subPath: ""
        # existingClaim: ""

      volumeMounts: []

      volumes: []

      nodeSelector: {}

      tolerations: []

      affinity: {}

    lion:
      enabled: true

      labels:
        app.jumpserver.org/name: jms-lion

      config:
        log:
          level: ERROR

      replicaCount: 1

      image:
        registry: docker.io
        repository: jumpserver/lion
        tag: v3.3.1
        pullPolicy: IfNotPresent

      command: []

      env:
        # See: https://docs.jumpserver.org/zh/master/admin-guide/env/#lion
        JUMPSERVER_ENABLE_FONT_SMOOTHING: true
        # JUMPSERVER_COLOR_DEPTH: 32
        # JUMPSERVER_ENABLE_WALLPAPER: true
        # JUMPSERVER_ENABLE_THEMING: true
        # JUMPSERVER_ENABLE_FULL_WINDOW_DRAG: true
        # JUMPSERVER_ENABLE_DESKTOP_COMPOSITION: true
        # JUMPSERVER_ENABLE_MENU_ANIMATIONS: true

      livenessProbe:
        failureThreshold: 30
        httpGet:
          path: /lion/health/
          port: web

      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /lion/health/
          port: web

      podSecurityContext: {}
        # fsGroup: 2000

      securityContext: {}
        # capabilities:
        #   drop:
        #   - ALL
        # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000

      service:
        type: ClusterIP
        web:
          port: 8081

      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 100m
        #   memory: 512Mi
        # requests:
        #   cpu: 100m
        #   memory: 512Mi

      persistence:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        size: 50Gi
        annotations:
          "helm.sh/resource-policy": keep
        finalizers:
          - kubernetes.io/pvc-protection
        # subPath: ""
        # existingClaim: ""

      volumeMounts: []

      volumes: []

      nodeSelector: {}

      tolerations: []

      affinity: {}

    magnus:
      enabled: true

      labels:
        app.jumpserver.org/name: jms-magnus

      config:
        log:
          level: ERROR

      replicaCount: 1

      image:
        registry: docker.io
        repository: jumpserver/magnus
        tag: v3.3.1
        pullPolicy: IfNotPresent

      command: []

      env: []

      livenessProbe:
        failureThreshold: 30
        tcpSocket:
          port: 9090

      readinessProbe:
        failureThreshold: 30
        tcpSocket:
          port: 9090

      podSecurityContext: {}
        # fsGroup: 2000

      securityContext: {}
        # capabilities:
        #   drop:
        #   - ALL
        # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000

      service:
        type: ClusterIP
        mysql:
          port: 33061
        mariadb:
          port: 33062
        redis:
          port: 63790
        postgresql:
          port: 54320
        oracle:
          ports: 30000-30100

      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 100m
        #   memory: 512Mi
        # requests:
        #   cpu: 100m
        #   memory: 512Mi

      persistence:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        size: 10Gi
        annotations:
          "helm.sh/resource-policy": keep
        finalizers:
          - kubernetes.io/pvc-protection
        # subPath: ""
        # existingClaim: ""

      volumeMounts: []

      volumes: []

      nodeSelector: {}

      tolerations: []

      affinity: {}

    xpack:
      enabled: false

    omnidb:
      labels:
        app.jumpserver.org/name: jms-omnidb

      config:
        log:
          level: ERROR

      replicaCount: 1

      image:
        registry: registry.fit2cloud.com
        repository: jumpserver/omnidb
        tag: v3.3.1
        pullPolicy: IfNotPresent

      command: []

      env: []

      livenessProbe:
        failureThreshold: 30
        tcpSocket:
          port: web

      readinessProbe:
        failureThreshold: 30
        tcpSocket:
          port: web

      podSecurityContext: {}
        # fsGroup: 2000

      securityContext: {}
        # capabilities:
        #   drop:
        #   - ALL
        # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000

      service:
        type: ClusterIP
        web:
          port: 8082

      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
        # requests:
        #   cpu: 100m
        #   memory: 128Mi

      persistence:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        size: 10Gi
        annotations:
          "helm.sh/resource-policy": keep
        finalizers:
          - kubernetes.io/pvc-protection
        # subPath: ""
        # existingClaim: ""

      volumeMounts: []

      volumes: []

      nodeSelector: {}

      tolerations: []

      affinity: {}

    razor:
      labels:
        app.jumpserver.org/name: jms-razor

      config:
        log:
          level: ERROR

      replicaCount: 1

      image:
        registry: registry.fit2cloud.com
        repository: jumpserver/razor
        tag: v3.3.1
        pullPolicy: IfNotPresent

      command: []

      env: []

      livenessProbe:
        failureThreshold: 30
        tcpSocket:
          port: rdp

      readinessProbe:
        failureThreshold: 30
        tcpSocket:
          port: rdp

      podSecurityContext: {}
        # fsGroup: 2000

      securityContext: {}
        # capabilities:
        #   drop:
        #   - ALL
        # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000

      service:
        type: ClusterIP
        rdp:
          port: 3389

      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
        # requests:
        #   cpu: 100m
        #   memory: 128Mi

      persistence:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        size: 50Gi
        annotations:
          "helm.sh/resource-policy": keep
        finalizers:
          - kubernetes.io/pvc-protection
        # subPath: ""
        # existingClaim: ""

      volumeMounts: []

      volumes: []

      nodeSelector: {}

      tolerations: []

      affinity: {}

    video:
      labels:
        app.jumpserver.org/name: jms-video

      config:
        log:
          level: ERROR

      replicaCount: 1

      image:
        registry: registry.fit2cloud.com
        repository: jumpserver/video-worker
        tag: v3.3.1
        pullPolicy: IfNotPresent

      command: []

      env: []

      livenessProbe:
        failureThreshold: 30
        httpGet:
          path: /video-worker/health/
          port: web

      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /video-worker/health/
          port: web

      podSecurityContext: {}
        # fsGroup: 2000

      securityContext: {}
        # capabilities:
        #   drop:
        #   - ALL
        # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000

      service:
        service:
        type: ClusterIP
        web:
          port: 9000

      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
        # requests:
        #   cpu: 100m
        #   memory: 128Mi

      persistence:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        size: 50Gi
        annotations:
          "helm.sh/resource-policy": keep
        finalizers:
          - kubernetes.io/pvc-protection
        # subPath: ""
        # existingClaim: ""

      volumeMounts: []

      volumes: []

      nodeSelector: {}

      tolerations: []

      affinity: {}

    web:
      enabled: true

      labels:
        app.jumpserver.org/name: jms-web

      replicaCount: 1

      image:
        registry: docker.io
        repository: jumpserver/web
        tag: v3.3.1
        pullPolicy: IfNotPresent

      command: []

      env: []
        # nginx client_max_body_size, default 4G
        # CLIENT_MAX_BODY_SIZE: 4096m

      livenessProbe:
        failureThreshold: 30
        httpGet:
          path: /api/health/
          port: web

      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /api/health/
          port: web

      podSecurityContext: {}
        # fsGroup: 2000

      securityContext: {}
        # capabilities:
        #   drop:
        #   - ALL
        # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000

      service:
        type: ClusterIP
        web:
          port: 80

      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
        # requests:
        #   cpu: 100m
        #   memory: 128Mi

      persistence:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        size: 1Gi
        annotations:
          "helm.sh/resource-policy": keep
        finalizers:
          - kubernetes.io/pvc-protection
        # subPath: ""
        # existingClaim: ""

      volumeMounts: []

      volumes: []

      nodeSelector: {}

      tolerations: []

      affinity: {}

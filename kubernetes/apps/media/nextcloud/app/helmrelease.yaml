---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app nextcloud
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 4.5.2
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: media
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      flavor: fpm-alpine
    nginx:
      enabled: true
    nextcloud:
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array('${SERVICE_CIDR}')
          );
      datadir: /var/www/data
      existingSecret:
        enabled: true
        secretName: &secret nextcloud-secret
        usernameKey: NEXTCLOUD_ADMIN_USER
        passwordKey: NEXTCLOUD_ADMIN_PASSWORD
        # tokenKey: METRICS_TOKEN
        # smtpHostKey: SMTP_HOST
        # smtpUsernameKey: SMTP_USERNAME
        # smtpPasswordKey: SMTP_PASSWORD
      extraEnv:
        - name: REDIS_HOST
          value: nextcloud-redis.media.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"
        - name: REDIS_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
              name: *secret
              key: NEXTCLOUD_REDIS_PASSWORD
      host: &host nextcloud.${SECRET_DOMAIN}
      mail:
        enabled: false
        fromAddress: admin
        domain: ${SECRET_DOMAIN}
        smtp:
          host: smtp.${SECRET_DOMAIN}
          port: 587
          authtype: tls
          name: ""
          password: ""
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:14.9
          envFrom:
            - secretRef:
                name: nextcloud-secret
    redis:
      enabled: false
      # auth:
      #   enabled: true
      #   redis.auth.existingSecret: nextcloud-secret
      #   redis.auth.existingSecretPasswordKey: NEXTCLOUD_REDIS_PASSWORD
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: 'postgresql'
      existingSecret:
        enabled: true
        secretName: *secret
        usernameKey: NEXTCLOUD_POSTGRESQL_USER
        passwordKey: NEXTCLOUD_POSTGRESQL_PASSWORD
        hostKey: NEXTCLOUD_POSTGRESQL_HOST
        databaseKey: NEXTCLOUD_POSTGRESQL_NAME
    ingress:
      enabled: true
      className: "internal"
      # servicePort: http
      annotations:
        # external-dns.alpha.kubernetes.io/target: "nextcloud.${SECRET_DOMAIN}"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      ## ADDITIONAL HEADER
      nginx.ingress.kubernetes.io/enable-global-auth: "false"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
      path: /
      pathType: Prefix
      tls:
        - hosts:
            - *host
    persistence:
      enabled: true
      # existingClaim: pvc-smb-nextcloud
      nextcloudData:
        enabled: true
        existingClaim: pvc-smb-nextcloud
        accessMode: ReadWriteMany
  # valuesFrom:
  #   - targetPath: externalDatabase.user
  #     kind: Secret
  #     name: nextcloud
  #     valuesKey: database-username
  #   - targetPath: externalDatabase.password
  #     kind: Secret
  #     name: nextcloud
  #     valuesKey: database-password